{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","linea1","setLinea1","linea2","setLinea2","imagen","setImagen","className","onChange","foto","target","value","texto","type","placeholder","onClick","html2canvas","document","querySelector","then","canvas","img","toDataURL","link","createElement","download","href","click","id","toUpperCase","src","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"4NA8DeA,MAzDf,WAEE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA4BJ,mBAAS,YAArC,mBAAOK,EAAP,KAAeC,EAAf,KAqBA,OACE,cADO,CACP,OAAKC,UAAU,MAAf,UAEE,gDAEA,yBAAQC,SAlBU,SAASC,GAC7BH,EAAUG,EAAKC,OAAOC,QAiBpB,UACE,wBAAQA,MAAO,WAAf,uBACA,wBAAQA,MAAM,aAAd,yBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,QAAd,yBACO,uBAET,uBAAOH,SAhCW,SAASI,GAC7BV,EAAUU,EAAMF,OAAOC,QA+BWE,KAAK,OAAOC,YAAY,cAAa,uBACrE,uBAAON,SA9BW,SAASI,GAC7BR,EAAUQ,EAAMF,OAAOC,QA6BWE,KAAK,OAAOC,YAAY,cAAa,uBACrE,wBAAQC,QAzBM,WAChBC,IAAYC,SAASC,cAAc,UAAUC,MAAK,SAAAC,GAChD,IAAIC,EAAKD,EAAOE,UAAU,aACtBC,EAAON,SAASO,cAAc,KAClCD,EAAKE,SAAW,WAChBF,EAAKG,KAAOL,EACZE,EAAKI,YAmBL,uBAEA,sBAAKC,GAAG,OAAOrB,UAAU,OAAzB,UACE,sBAAKA,UAAU,SAAf,UACE,sBAAMA,UAAU,SAAhB,SAA0BN,EAAO4B,gBADnC,IACyD,0BAEzD,sBAAKtB,UAAU,SAAf,UACE,sBAAMA,UAAU,SAAhB,SAA0BJ,EAAO0B,gBADnC,IACyD,0BAEzD,qBAAKC,IAAK,OAAQzB,EAAS,gBC1CpB0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxB,SAASyB,eAAe,SAM1BX,K","file":"static/js/main.a81868ba.chunk.js","sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport './index.css';\nimport html2canvas from 'html2canvas';\n\nfunction App() { //Componente\n    \n  const [linea1, setLinea1] = useState(\"\");\n  const [linea2, setLinea2] = useState(\"\");\n  const [imagen, setImagen] = useState(\"confused\");\n  \n  const cambiarLinea1 = function(texto) {\n    setLinea1(texto.target.value);\n  }\n  const cambiarLinea2 = function(texto) {\n    setLinea2(texto.target.value);\n  }\n  const cambiarImagen = function(foto) {\n    setImagen(foto.target.value);\n  }\n  const fExportar = function() {\n    html2canvas(document.querySelector(\"#meme\")).then(canvas => { //Libreria para Screenshots\n      var img= canvas.toDataURL(\"image/png\");\n      var link = document.createElement('a');\n      link.download = 'meme.png';\n      link.href = img;\n      link.click();\n  });\n}\n\n  return ( //Se pone el paréntesis para escribir el código abajo\n    <div className=\"App\">\n\n      <h1>Meme Generator</h1>\n\n      <select onChange={cambiarImagen}>\n        <option value= \"confused\">Confudido</option>\n        <option value=\"desconfiar\">Desconfiado</option>\n        <option value=\"disaster\">Desastre</option>\n        <option value=\"homero\">Homero</option>\n        <option value=\"Think\">Pensando</option>\n      </select><br />\n      \n      <input onChange={cambiarLinea1} type=\"text\" placeholder=\"Linea uno\"/><br />\n      <input onChange={cambiarLinea2} type=\"text\" placeholder=\"Linea dos\"/><br />\n      <button onClick={fExportar}>Descargar</button>\n\n      <div id=\"meme\" className=\"meme\">\n        <div className=\"linea1\">\n          <span className=\"texto1\">{linea1.toUpperCase()}</span> <br />\n        </div>\n        <div className=\"linea2\">\n          <span className=\"texto2\">{linea2.toUpperCase()}</span> <br />\n        </div>\n        <img src={\"img/\"+ imagen + \".jpg\"}/>\n\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}